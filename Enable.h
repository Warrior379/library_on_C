#include "Poisk.h"
//функция для добавления книг 
void Enable(){
	int i;
	INFA k;
	int m;
	FILE *f;
	HEAD *t,*t_1;
	f = fopen("Все_книги.txt","a+");
	t = tree_make(f,1);//создаем дерево на основании всех книг
	i = t->kol;//узнаем сколько всего элементов в списке(в файле)
	destroy(t->koren);//удаляем этот список
	free(t);
	/*
		Создание бинарного дерева на основании открытого файла
		Это нужно для получения количества элементов в файле
		если в файле к примеру есть n элементов
		то следующий элемент в файле должен быть с номером n+1
		чтобы это обеспечить надо узнать количесвто элементов в файле
		и далее в догрузке данных в список, номер элемента делать в зависимости от этого количества
		
	*/
	for(;;){
		system("cls");
		t_1 = sozd();//создание головы дерева в которое будем догружать
		//догрузка данных в созданное бинарное дерево t_1
		for(;;){
				system("cls");
				Po_Seredinke("ДОБАВИТЬ",60);
				k.n = i+1;//номер будет на 1 больше чем кол-во элементов в файле
				printf("\n                                       ~ Введите автора|\n");
				strcpy(k.avtor,Correct(4).s_1);
				printf("\n                               ~ Введите название книги|\n");
				strcpy(k.nazv, Correct(9).s_1);
				printf("\n                                  ~ Введите год издания|\n");
				k.god = Cifra(Correct(5).s_1);
				printf("\n                              ~ Введите количество книг|\n");
				k.kol = Cifra(Correct(5).s_1);
				strcpy(k.sostojanie,sost_1);//добавить можно только в библиотеку
				if(!vstavka(t,k))puts("\n [ Не удалось добавить данные в бинарное дерево. ]");
				i++;//увеличиваем кол-во
				Ch(60);
				puts("\n ~ Догрузить еще данные?(1 - Да / 0 - Нет)");
				m = Cifra(Correct(3).s_1);
				if(!m) break;
		}
		BST_make(t_1);//делаем его бинарным деревом поиска
		Ch(60);
		puts("\n ~ Выгрузить данные в файл?(1 - Да / 0 - Нет)");
		m = Cifra(Correct(3).s_1);
		if(m){//если пользователь захотел выгрузить данные в файл
		fseek(f,0,SEEK_END);//смещение указателя в файле в конец
			long pos=ftell(f);
			if(pos<=0) Shapka(f);//если файл пуст, то печатаем в начале в него шапку
			fprint(t_1->koren,f);//выгрузка в файл 
		}
		Ch(60);//штриховка
		puts("\n ~ Хотите добавить данные еще в файл? (1 - Да / 0 - Нет)");
		m = Cifra(Correct(3).s_1);
		destroy(t_1->koren);//удаляем это дерево 
		free(t_1);
		if(!m) {//если пользователь не захотел добавлять еще данные
			Ch(60);
			fclose(f);//закрываем файл
			return;
		}
		
	}
}