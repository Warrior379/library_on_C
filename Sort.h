#include "Delete.h"
//сортировка списка книг по выбранному параметру
void Sort(){
	system("mode con:cols=125");//делаем размер буфера в 125 символов в ширину
	int i;
	FILE *f;
	HEAD *t;
	for(;;){
		system("cls");
		Po_Seredinke("СОРТИРОВКА",125);
		puts("\n\n\n");
		puts(" ~ Выберите какие книги вы хотите посмотреть:");
		puts("\t\t\t\t\t\t|1 - все книги");
	    printf("\t\t\t\t\t\t _____________\n\n");
		puts("\t\t\t\t\t\t|2 - книги, которые есть в библиотеке");
	    printf("\t\t\t\t\t\t ____________________________________\n\n");
		puts("\t\t\t\t\t\t|3 - книги, которые у пользователей библиотеки");
	    printf("\t\t\t\t\t\t _____________________________________________\n\n");
		i = Cifra(Correct(2).s_1);
		Ch(125);
		f = fopen("Все_книги.txt","a+");
		t = tree_make(f,i);//создаем дерево на основании выбранных книг
		if(t->kol == 0) {puts(" ~ Библиотека пуста!");fclose(f);break;}
		puts(" ~ Выберите по какому параметру вы хотите отсортировать:");
		puts("\n                                                                1) - Автор|");
		puts("\n                                                       2) - Название книги|");
		puts("\n                                                          3) - Год издания|");
		puts("\n                                                           4) - Количество|");
		puts("\n                                                         5) - Номер в базе|");
		i = Cifra(Correct(6).s_1);
		t = Sort_BT(t,i);//сортируем на основании выбранного параметра
		po_krasote();//печатаем шапку
		print(t->koren);//вывод его на экран
		destroy(t->koren);//удаление дерева
		fclose(f);
		puts("Хотите еще отсортировать книги? (1 - Да / 0 - Нет)");
		fflush(stdin);
		i = Cifra(Correct(3).s_1);
		Ch(125);
		if(!i) return;
	}
}
